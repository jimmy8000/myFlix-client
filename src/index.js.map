{"mappings":"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","sources":["src/index.jsx","src/components/main-view/main-view.jsx","src/components/movie-card/movie-card.jsx","src/components/movie-view/movie-view.jsx","src/components/login-view/login-view.jsx","src/components/signup-view/signup-view.jsx","src/components/profile-view/profile-view.jsx","src/components/navigation-bar/navigation-bar.jsx","src/components/search-bar/search-bar.jsx"],"sourcesContent":["import { createRoot } from 'react-dom/client';\nimport { MainView } from './components/main-view/main-view';\nimport Container from \"react-bootstrap/Container\";\nimport \"./index.scss\";\n\nconst App = () => {\n  return (\n    <Container fluid>\n      <MainView />\n    </Container>\n    \n  );\n};\n\nconst container = document.querySelector(\"#root\");\nconst root = createRoot(container);\n\nroot.render(<App />);","import { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes, Navigate, useParams } from \"react-router-dom\";\nimport { MovieCard } from \"../movie-card/movie-card\";\nimport { MovieView } from \"../movie-view/movie-view\";\nimport { LoginView } from \"../login-view/login-view\";\nimport { SignupView } from \"../signup-view/signup-view\";\nimport { ProfileView } from \"../profile-view/profile-view\";\nimport { NavigationBar } from \"../navigation-bar/navigation-bar\";\nimport SearchBar from \"../search-bar/search-bar\";\nimport { Row, Col, Button } from \"react-bootstrap\";\n\nexport const MainView = () => {\n  const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n  const storedToken = localStorage.getItem(\"token\");\n  const [user, setUser] = useState(storedUser ? storedUser : null);\n  const [token, setToken] = useState(storedToken ? storedToken : null);\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredMovies = searchQuery.length === 0\n    ? movies\n    : movies.filter((movie) =>\n        movie.title.toLowerCase().includes(searchQuery.toLowerCase())\n      );\n\n\n  useEffect(() => {\n    if (!token) {\n      return;\n    }\n\n    fetch(\"https://jimmys-flix-bfa74c78fd67.herokuapp.com/movies\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setMovies(data.map(movie => ({\n          id: movie._id,\n          title: movie.Title,\n          director: movie.Director.Name,\n          description: movie.Description,\n          genre: movie.Genre.Name,\n          image: movie.ImagePath,\n        })));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching movies:\", error);\n      });\n  }, [token]);\n  \n\n  const handleLogout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.clear();\n  };\n\n  const MovieDetailView = () => {\n    const { id } = useParams();\n    const movie = movies.find(movie => movie.id === id);\n\n    return movie ? <MovieView movie={movie} /> : <div>Loading...</div>;\n  };\n\n  return (\n    <Router>\n      <NavigationBar user={user} setToken={setToken} setUser={setUser} handleLogout={handleLogout} />\n      <SearchBar onSearch={setSearchQuery} />\n      <Row className=\"justify-content-md-center my-4\">\n        <Routes>\n          <Route path=\"/login\" element={\n            user ? <Navigate to=\"/\" /> : (\n              <Col md={5}>\n                <LoginView onLoggedIn={(user, token) => { setUser(user); setToken(token); }} />\n              </Col>\n            )\n          }/>\n          <Route path=\"/signup\" element={\n            user ? <Navigate to=\"/\" /> : (\n              <Col md={5}>\n                <SignupView />\n              </Col>\n            )\n          }/>\n          <Route path=\"/movies/:id\" element={\n            !user ? <Navigate to=\"/login\" replace /> : <MovieDetailView />\n          }/>\n          <Route path=\"/\" element={\n            !user ? <Navigate to=\"/login\" replace /> : (\n              <Col>\n                <Row>\n                  {filteredMovies.length > 0 ? filteredMovies.map(movie => (\n                    <MovieCard key={movie.id} movie={movie} user={user} token={token} setUser={setUser} />\n                  )) : <div>The list is empty</div>}\n                </Row>\n              </Col>\n            )\n          }/>\n          <Route path=\"/profile\" element={<ProfileView user={user} setUser={setUser} movies={movies} token={token} />} />\n        </Routes>\n      </Row>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card, Col, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieCard = ({ movie, token, setUser, user }) => {\n  \n  const handleFavorites = () => {\n    fetch(\n      `https://jimmys-flix-bfa74c78fd67.herokuapp.com/users/${user.Username}/movies/${movie.id}`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to add to favorites\");\n        }\n        return response.json();\n      })\n      .then((updatedUser) => {\n        setUser(updatedUser);\n        alert(`${movie.title} added to favorites!`);\n      })\n      .catch((error) => {\n        console.error(\"Error adding movie to favorites:\", error);\n        alert(\"Could not add movie to favorites.\");\n      });\n  };\n\n  const handleRemoveFromFavorites = () => {\n    fetch(\n      `https://jimmys-flix-bfa74c78fd67.herokuapp.com/users/${user.Username}/movies/${movie.id}`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(\"Failed to remove from favorites\");\n        }\n        return response.json();\n      })\n      .then((updatedUser) => {\n        setUser(updatedUser);\n        alert(`${movie.title} removed from favorites!`);\n      })\n      .catch((error) => {\n        console.error(\"Error removing movie from favorites:\", error);\n        alert(\"Could not remove movie from favorites.\");\n      });\n  };\n\n  const isFavorite = user.FavoriteMovies.find(movieId => movie.id === movieId)\n\n  return (\n    <Col md={3} lg={2} className=\"mb-3\">\n      <Card className=\"h-100\">\n        <Card.Img\n          variant=\"top\"\n          src={movie.image}\n          style={{ objectFit: \"cover\", height: \"100%\" }}\n        />\n        <Card.Body>\n          <Card.Title>{movie.title}</Card.Title>\n          <Card.Text>{movie.director}</Card.Text>\n          <Link to={`/movies/${encodeURIComponent(movie.id)}`}>\n            <Button variant=\"link\">Open</Button>\n          </Link>\n          {isFavorite ? <Button variant=\"danger\" onClick={handleRemoveFromFavorites}>Remove from Favorites</Button> : <Button variant=\"primary\" onClick={handleFavorites}>Add to Favorites</Button>}\n          \n        </Card.Body>\n      </Card>\n    </Col>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    director: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport const MovieView = ({ movie }) => {\n  return (\n    <div className=\"container mt-4\">\n      <div className=\"row\">\n        <div className=\"col-lg-4 col-md-6 mx-auto\">\n          <img src={movie.image} alt={`${movie.title} cover`} className=\"img-fluid\" />\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{movie.title}</h5>\n              <p className=\"card-text\"><strong>Director:</strong> {movie.director}</p>\n              <p className=\"card-text\"><strong>Description:</strong> {movie.description}</p>\n              <Link to=\"/\" className=\"btn btn-primary\">Back</Link>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nMovieView.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    director: PropTypes.string,\n    description: PropTypes.string,\n    image: PropTypes.string\n  }).isRequired\n};\n","import { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\n\nexport const LoginView = ({ onLoggedIn }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const data = {\n      Username: username,\n      Password: password\n    };\n\n    fetch(\"https://jimmys-flix-bfa74c78fd67.herokuapp.com/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then(response => response.json())\n      .then(data => {\n        if (data.user) {\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\n          localStorage.setItem(\"token\", data.token);\n          onLoggedIn(data.user, data.token);\n        } else {\n          alert(\"No such user\");\n        }\n      })\n      .catch(e => {\n        console.error(\"Login error: \", e);\n      });\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h2>Login</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control \n            type=\"text\" \n            value={username} \n            onChange={(e) => setUsername(e.target.value)} \n            required \n          />\n        </Form.Group>\n        \n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)} \n            required \n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n","import { useState } from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\n\n\nexport const SignupView = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\");\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const data = {\n      Username: username,\n      Password: password,\n      Email: email,\n      Birthday: birthday,\n    };\n\n    fetch(\"https://jimmys-flix-bfa74c78fd67.herokuapp.com/users\", {\n      method: \"POST\",\n      body: JSON.stringify(data),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((response) => {\n      if (response.ok) {\n        alert(\"Signup successful\");\n        window.location.reload();\n      } else {\n        alert(\"Signup failed\");\n      }\n    });\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h2>Sign Up</h2>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId=\"formUsername\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control \n            type=\"text\" \n            value={username} \n            onChange={(e) => setUsername(e.target.value)} \n            required \n            minLength=\"3\"\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control \n            type=\"password\" \n            value={password} \n            onChange={(e) => setPassword(e.target.value)} \n            required \n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formEmail\">\n          <Form.Label>Email</Form.Label>\n          <Form.Control \n            type=\"email\" \n            value={email} \n            onChange={(e) => setEmail(e.target.value)} \n            required \n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formBirthday\">\n          <Form.Label>Birthday</Form.Label>\n          <Form.Control \n            type=\"date\" \n            value={birthday} \n            onChange={(e) => setBirthday(e.target.value)} \n            required \n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </Container>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport { Card, Row, Col, Container, Form, Button } from \"react-bootstrap\";\nimport { MovieCard } from \"../movie-card/movie-card\";\n\nexport const ProfileView = ({ user, token, setUser, movies }) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!user) {\n    return <Navigate to=\"/\" replace />;\n  }\n\n  const FavoriteMovies = user.FavoriteMovies\n    ? movies.filter((movie) => user.FavoriteMovies.includes(movie.id))\n    : [];\n\n  const handleEdit = () => {\n    setEditMode(true);\n  };\n\n  const handleUpdateUser = (event) => {\n    event.preventDefault();\n    const updatedInfo = {\n      Username: event.target.username.value,\n      Email: event.target.email.value,\n      Birthday: event.target.birthday.value,\n    };\n\n    fetch(\n      `https://jimmys-flix-bfa74c78fd67.herokuapp.com/users/${user.Username}`,\n      {\n        method: \"PUT\",\n        body: JSON.stringify(updatedInfo),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    )\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error(`HTTP status ${response.status}`);\n        }\n        return response.json();\n      })\n      .then((updatedUser) => {\n        localStorage.setItem(\"user\", JSON.stringify(updatedUser));\n        setUser(updatedUser);\n        setEditMode(false);\n      })\n      .catch((error) => {\n        console.error(\"Error updating user:\", error);\n      });\n  };\n\n  const handleDelete = () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete your profile? This action cannot be undone.\"\n      )\n    ) {\n      fetch(\n        `https://jimmys-flix-bfa74c78fd67.herokuapp.com/users/${user.Username}`,\n        {\n          method: \"DELETE\",\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      ).then((response) => {\n        if (response.ok) {\n          setUser(null);\n          localStorage.removeItem(\"user\");\n          localStorage.removeItem(\"token\");\n          alert(\"Your account has been deleted\");\n        } else {\n          alert(\"something went wrong.\");\n        }\n      });\n    }\n  };\n\n  const handleCancel = () => {\n    setEditMode(false);\n  };\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col md={6}>\n          <Card>\n            <Card.Body>\n              {editMode ? (\n                <Form onSubmit={handleUpdateUser}>\n                  <Form.Group controlId=\"formUsername\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name=\"username\"\n                      defaultValue={user.Username}\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control\n                      type=\"email\"\n                      name=\"email\"\n                      defaultValue={user.Email}\n                      required\n                    />\n                  </Form.Group>\n                  <Form.Group controlId=\"formBirthday\">\n                    <Form.Label>Birthday</Form.Label>\n                    <Form.Control\n                      type=\"date\"\n                      name=\"birthday\"\n                      defaultValue={user.Birthday}\n                      required\n                    />\n                  </Form.Group>\n                  <Button variant=\"primary\" type=\"submit\">\n                    Save Changes\n                  </Button>\n                  <Button variant=\"secondary\" onClick={handleCancel}>\n                    Cancel\n                  </Button>\n                </Form>\n              ) : (\n                <>\n                  <Card.Title>Profile Information</Card.Title>\n                  <Card.Text>\n                    <strong>Username:</strong> {user.Username}\n                  </Card.Text>\n                  <Card.Text>\n                    <strong>Email:</strong> {user.Email}\n                  </Card.Text>\n                  <Card.Text>\n                    <strong>Birthday:</strong> {user.Birthday}\n                  </Card.Text>\n                  <Button variant=\"primary\" onClick={handleEdit}>\n                    Edit Profile\n                  </Button>\n                  <Button variant=\"secondary\" onClick={handleDelete}>\n                    Delete Profile\n                  </Button>\n                </>\n              )}\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <Row className=\"justify-content-md-center mx-3 my-4\">\n        <h2>Favorite movies</h2>\n        {FavoriteMovies.map((movie) => {\n          return (\n              <MovieCard\n              key={movie.id} className=\"m-3\"\n                movie={movie}\n                user={user}\n                setUser={setUser}\n                token={token}\n              />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n};\n","import { Navbar, Container, Nav } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavigationBar = ({ user, handleLogout}) => {\n    \n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand as={Link} to=\"/\">\n          MyFlix App\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            {!user && (\n              <>\n                <Nav.Link as={Link} to=\"/login\">\n                  Login\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/signup\">\n                  Signup\n                </Nav.Link>\n              </>\n            )}\n            {user && (\n              <>\n                <Nav.Link as={Link} to=\"/\">\n                  Home\n                </Nav.Link>\n                <Nav.Link as={Link} to=\"/profile\">\n                  Profile\n                </Nav.Link>\n                <Nav.Link onClick={handleLogout}>Logout</Nav.Link>\n              </>\n            )}\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n};\n","import React from 'react';\n\nconst SearchBar = ({ onSearch }) => {\n  return (\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      placeholder=\"Search movies by name...\"\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  );\n};\n\nexport default SearchBar;\n"],"names":[],"version":3,"file":"index.js.map"}